HeaderInclude
config/6502/6502-opts.h

mlra
Target Report Var(m65x_lra_flag) Init(1) Save
Use LRA instead of reload.

mdebug-stack
Target Undocumented Var(TARGET_DEBUG_STACK)

mdebug-address
Target Undocumented Var(TARGET_DEBUG_ADDRESS)

mdebug-legitimize-addr
Target Undocumented Var(TARGET_DEBUG_LEGITIMIZE_ADDR)

mdebug-secondary-reload
Target Undocumented Var(TARGET_DEBUG_SECONDARY_RELOAD)

msymbol-prop
Target Var(flag_symbol_prop) Init(1)
Enable a pass to help propagate symbolic addresses into load/store instructions
in order to use absolute-indexed addressing modes more effectively.

mcpu=
Target RejectNegative ToLower Joined Enum(processor_type) Var(m65x_cpu_option) Init(m6502)
Specify the target CPU type

Enum
Name(processor_type) Type(enum processor_type)
Types of 65xx series CPUs.

EnumValue
Enum(processor_type) String(6502) Value(m6502)

EnumValue
Enum(processor_type) String(6502x) Value(m6502x)

EnumValue
Enum(processor_type) String(65sc02) Value(w65sc02)

EnumValue
Enum(processor_type) String(65c02) Value(w65c02)

EnumValue
Enum(processor_type) String(huc6280) Value(huc6280)

mmach=
Target RejectNegative ToLower Joined Enum(machine_type) Var(m65x_machine_option) Init(mach_semi65x)
Specify the target machine

Enum
Name(machine_type) Type(enum machine_type)
The 6502-based machine to target.

EnumValue
Enum(machine_type) String(semi65x) Value(mach_semi65x)

EnumValue
Enum(machine_type) String(bbcb) Value(mach_bbcb)

EnumValue
Enum(machine_type) String(bbcmaster) Value(mach_bbcmaster)

EnumValue
Enum(machine_type) String(c64) Value(mach_c64)

EnumValue
Enum(machine_type) String(atari) Value(mach_atari)
